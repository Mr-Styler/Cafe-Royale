function debounce(l, a, r) { var o; return function () { var e = this, t = arguments; clearTimeout(o), o = setTimeout(function () { o = null, r || l.apply(e, t) }, a), r && !o && l.apply(e, t) } } function smoothToPricing(e) { document.getElementById(e) && document.getElementById(e).scrollIntoView({ behavior: "smooth" }) } function debounce(l, a, r) { var o; return function () { var e = this, t = arguments; clearTimeout(o), o = setTimeout(function () { o = null, r || l.apply(e, t) }, a), r && !o && l.apply(e, t) } } var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]')), popoverList = popoverTriggerList.map(function (e) { return new bootstrap.Popover(e) }), tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')), tooltipList = tooltipTriggerList.map(function (e) { return new bootstrap.Tooltip(e) }); function setAttributes(t, l) { Object.keys(l).forEach(function (e) { t.setAttribute(e, l[e]) }) } var myLatlng, mapOptions, map, marker, popoverList = (popoverTriggerList = [].slice.call(document.querySelectorAll('[data-toggle="popover"]'))).map(function (e) { return new bootstrap.Popover(e) }), tooltipList = (tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-toggle="tooltip"]'))).map(function (e) { return new bootstrap.Tooltip(e) }); function dropDown(e) { if (!document.querySelector(".dropdown-hover")) { event.stopPropagation(), event.preventDefault(); for (var t = e.parentElement.parentElement.children, l = 0; l < t.length; l++)t[l].lastElementChild != e.parentElement.lastElementChild && (t[l].lastElementChild.classList.remove("show"), t[l].firstElementChild.classList.remove("show")); e.nextElementSibling.classList.contains("show") ? (e.nextElementSibling.classList.remove("show"), e.classList.remove("show")) : (e.nextElementSibling.classList.add("show"), e.classList.add("show")) } } if (window.onload = function () { for (var e = document.querySelectorAll("input"), t = 0; t < e.length; t++)e[t].addEventListener("focus", function (e) { this.parentElement.classList.add("is-focused") }, !1), e[t].onkeyup = function (e) { "" != this.value ? this.parentElement.classList.add("is-filled") : this.parentElement.classList.remove("is-filled") }, e[t].addEventListener("focusout", function (e) { "" != this.value && this.parentElement.classList.add("is-filled"), this.parentElement.classList.remove("is-focused") }, !1); for (var l = document.querySelectorAll(".btn"), t = 0; t < l.length; t++)l[t].addEventListener("click", function (e) { var t = e.target, l = t.querySelector(".ripple"); (l = document.createElement("span")).classList.add("ripple"), l.style.width = l.style.height = Math.max(t.offsetWidth, t.offsetHeight) + "px", t.appendChild(l), l.style.left = e.offsetX - l.offsetWidth / 2 + "px", l.style.top = e.offsetY - l.offsetHeight / 2 + "px", l.classList.add("ripple"), setTimeout(function () { l.parentElement.removeChild(l) }, 600) }, !1) }, document.querySelector(".blur-shadow-image")) { var shadowCards = document.querySelectorAll(".blur-shadow-image"); if (shadowCardsRounded = document.querySelectorAll(".blur-shadow-image.rounded-circle")) for (var i = 0; i < shadowCardsRounded.length; i++) { var div = document.createElement("DIV"), currentSrc = (shadowCardsRounded[i].parentElement.appendChild(div), div.classList.add("colored-shadow", "rounded"), shadowCardsRounded[i].children[0].getAttribute("src")); (el = shadowCardsRounded[i].nextElementSibling).style.backgroundImage = "url(" + currentSrc + ")" } if (shadowCards) for (i = 0; i < shadowCards.length; i++) { div = document.createElement("DIV"), currentSrc = (shadowCards[i].parentElement.appendChild(div), div.classList.add("colored-shadow"), shadowCards[i].children[0].getAttribute("src")); (el = shadowCards[i].nextElementSibling).style.backgroundImage = "url(" + currentSrc + ")" } } if (document.querySelector(".blur-shadow-avatar")) { var shadowCardsRounded, shadowCards = document.querySelectorAll(".blur-shadow-avatar"); if (shadowCardsRounded = document.querySelectorAll(".blur-shadow-avatar.rounded-circle")) for (i = 0; i < shadowCardsRounded.length; i++) { for (var div = document.createElement("DIV"), avatarClasses = (shadowCardsRounded[i].parentElement.appendChild(div), div.classList.add("colored-shadow", "rounded", "start-0", "end-0", "mx-auto"), ["avatar-xs", "avatar-sm", "avatar-lg", "avatar-xl", "avatar-xxl"]), k = 0; k < avatarClasses.length; k++)shadowCardsRounded[i].firstElementChild.classList.contains(avatarClasses[k]) && div.classList.add(avatarClasses[k]); currentSrc = shadowCardsRounded[i].children[0].getAttribute("src"); (el = shadowCardsRounded[i].nextElementSibling).style.backgroundImage = "url(" + currentSrc + ")" } if (shadowCards) for (i = 0; i < shadowCards.length; i++) { for (div = document.createElement("DIV"), avatarClasses = (shadowCards[i].parentElement.appendChild(div), div.classList.add("colored-shadow", "start-0", "end-0", "mx-auto"), ["avatar-xs", "avatar-sm", "avatar-lg", "avatar-xl", "avatar-xxl"]), k = 0; k < avatarClasses.length; k++)shadowCards[i].firstElementChild.classList.contains(avatarClasses[k]) && div.classList.add(avatarClasses[k]); var el, currentSrc = shadowCards[i].children[0].getAttribute("src"); (el = shadowCards[i].nextElementSibling).style.backgroundImage = "url(" + currentSrc + ")" } } document.querySelector("#google-maps") && (mapOptions = { zoom: 13, center: myLatlng = new google.maps.LatLng(40.748817, -73.985428), scrollwheel: !1, styles: [{ featureType: "administrative", elementType: "labels.text.fill", stylers: [{ color: "#444444" }] }, { featureType: "landscape", elementType: "all", stylers: [{ color: "#f2f2f2" }] }, { featureType: "poi", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "road", elementType: "all", stylers: [{ saturation: -100 }, { lightness: 45 }] }, { featureType: "road.highway", elementType: "all", stylers: [{ visibility: "simplified" }] }, { featureType: "road.arterial", elementType: "labels.icon", stylers: [{ visibility: "off" }] }, { featureType: "transit", elementType: "all", stylers: [{ visibility: "off" }] }, { featureType: "water", elementType: "all", stylers: [{ color: "#C5CBF5" }, { visibility: "on" }] }] }, map = new google.maps.Map(document.getElementById("google-maps"), mapOptions), (marker = new google.maps.Marker({ position: myLatlng, title: "Hello World!" })).setMap(map));
//# sourceMappingURL=_site_kit_pro/assets/js/kit-pro.js.map